{"ast":null,"code":"// https://rwaldron.github.io/proposal-math-extensions/\nmodule.exports = Math.scale || function scale(x, inLow, inHigh, outLow, outHigh) {\n  if (arguments.length === 0 // eslint-disable-next-line no-self-compare\n  || x != x // eslint-disable-next-line no-self-compare\n  || inLow != inLow // eslint-disable-next-line no-self-compare\n  || inHigh != inHigh // eslint-disable-next-line no-self-compare\n  || outLow != outLow // eslint-disable-next-line no-self-compare\n  || outHigh != outHigh) return NaN;\n  if (x === Infinity || x === -Infinity) return x;\n  return (x - inLow) * (outHigh - outLow) / (inHigh - inLow) + outLow;\n};","map":{"version":3,"sources":["C:/Users/chris/Documents/GitHub/ResumeWebSite/Newsite/resume/node_modules/babel-polyfill/node_modules/core-js/modules/_math-scale.js"],"names":["module","exports","Math","scale","x","inLow","inHigh","outLow","outHigh","arguments","length","NaN","Infinity"],"mappings":"AAAA;AACAA,MAAM,CAACC,OAAP,GAAiBC,IAAI,CAACC,KAAL,IAAc,SAASA,KAAT,CAAeC,CAAf,EAAkBC,KAAlB,EAAyBC,MAAzB,EAAiCC,MAAjC,EAAyCC,OAAzC,EAAkD;AAC/E,MACEC,SAAS,CAACC,MAAV,KAAqB,CAArB,CACE;AADF,KAEKN,CAAC,IAAIA,CAFV,CAGE;AAHF,KAIKC,KAAK,IAAIA,KAJd,CAKE;AALF,KAMKC,MAAM,IAAIA,MANf,CAOE;AAPF,KAQKC,MAAM,IAAIA,MARf,CASE;AATF,KAUKC,OAAO,IAAIA,OAXlB,EAYE,OAAOG,GAAP;AACF,MAAIP,CAAC,KAAKQ,QAAN,IAAkBR,CAAC,KAAK,CAACQ,QAA7B,EAAuC,OAAOR,CAAP;AACvC,SAAO,CAACA,CAAC,GAAGC,KAAL,KAAeG,OAAO,GAAGD,MAAzB,KAAoCD,MAAM,GAAGD,KAA7C,IAAsDE,MAA7D;AACD,CAhBD","sourcesContent":["// https://rwaldron.github.io/proposal-math-extensions/\r\nmodule.exports = Math.scale || function scale(x, inLow, inHigh, outLow, outHigh) {\r\n  if (\r\n    arguments.length === 0\r\n      // eslint-disable-next-line no-self-compare\r\n      || x != x\r\n      // eslint-disable-next-line no-self-compare\r\n      || inLow != inLow\r\n      // eslint-disable-next-line no-self-compare\r\n      || inHigh != inHigh\r\n      // eslint-disable-next-line no-self-compare\r\n      || outLow != outLow\r\n      // eslint-disable-next-line no-self-compare\r\n      || outHigh != outHigh\r\n  ) return NaN;\r\n  if (x === Infinity || x === -Infinity) return x;\r\n  return (x - inLow) * (outHigh - outLow) / (inHigh - inLow) + outLow;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}
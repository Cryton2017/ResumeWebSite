{"ast":null,"code":"'use strict';\n\nvar anObject = require('./_an-object');\n\nvar sameValue = require('./_same-value');\n\nvar regExpExec = require('./_regexp-exec-abstract'); // @@search logic\n\n\nrequire('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search, maybeCallNative) {\n  return [// `String.prototype.search` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.search\n  function search(regexp) {\n    var O = defined(this);\n    var fn = regexp == undefined ? undefined : regexp[SEARCH];\n    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n  }, // `RegExp.prototype[@@search]` method\n  // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search\n  function (regexp) {\n    var res = maybeCallNative($search, regexp, this);\n    if (res.done) return res.value;\n    var rx = anObject(regexp);\n    var S = String(this);\n    var previousLastIndex = rx.lastIndex;\n    if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n    var result = regExpExec(rx, S);\n    if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n    return result === null ? -1 : result.index;\n  }];\n});","map":{"version":3,"sources":["C:/Users/chris/Documents/GitHub/ResumeWebSite/Newsite/resume/node_modules/babel-polyfill/node_modules/core-js/modules/es6.regexp.search.js"],"names":["anObject","require","sameValue","regExpExec","defined","SEARCH","$search","maybeCallNative","search","regexp","O","fn","undefined","call","RegExp","String","res","done","value","rx","S","previousLastIndex","lastIndex","result","index"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,eAAD,CAAvB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,yBAAD,CAAxB,C,CAEA;;;AACAA,OAAO,CAAC,eAAD,CAAP,CAAyB,QAAzB,EAAmC,CAAnC,EAAsC,UAAUG,OAAV,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoCC,eAApC,EAAqD;AACzF,SAAO,CACL;AACA;AACA,WAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACtB,QAAIC,CAAC,GAAGN,OAAO,CAAC,IAAD,CAAf;AACA,QAAIO,EAAE,GAAGF,MAAM,IAAIG,SAAV,GAAsBA,SAAtB,GAAkCH,MAAM,CAACJ,MAAD,CAAjD;AACA,WAAOM,EAAE,KAAKC,SAAP,GAAmBD,EAAE,CAACE,IAAH,CAAQJ,MAAR,EAAgBC,CAAhB,CAAnB,GAAwC,IAAII,MAAJ,CAAWL,MAAX,EAAmBJ,MAAnB,EAA2BU,MAAM,CAACL,CAAD,CAAjC,CAA/C;AACD,GAPI,EAQL;AACA;AACA,YAAUD,MAAV,EAAkB;AAChB,QAAIO,GAAG,GAAGT,eAAe,CAACD,OAAD,EAAUG,MAAV,EAAkB,IAAlB,CAAzB;AACA,QAAIO,GAAG,CAACC,IAAR,EAAc,OAAOD,GAAG,CAACE,KAAX;AACd,QAAIC,EAAE,GAAGnB,QAAQ,CAACS,MAAD,CAAjB;AACA,QAAIW,CAAC,GAAGL,MAAM,CAAC,IAAD,CAAd;AACA,QAAIM,iBAAiB,GAAGF,EAAE,CAACG,SAA3B;AACA,QAAI,CAACpB,SAAS,CAACmB,iBAAD,EAAoB,CAApB,CAAd,EAAsCF,EAAE,CAACG,SAAH,GAAe,CAAf;AACtC,QAAIC,MAAM,GAAGpB,UAAU,CAACgB,EAAD,EAAKC,CAAL,CAAvB;AACA,QAAI,CAAClB,SAAS,CAACiB,EAAE,CAACG,SAAJ,EAAeD,iBAAf,CAAd,EAAiDF,EAAE,CAACG,SAAH,GAAeD,iBAAf;AACjD,WAAOE,MAAM,KAAK,IAAX,GAAkB,CAAC,CAAnB,GAAuBA,MAAM,CAACC,KAArC;AACD,GApBI,CAAP;AAsBD,CAvBD","sourcesContent":["'use strict';\r\n\r\nvar anObject = require('./_an-object');\r\nvar sameValue = require('./_same-value');\r\nvar regExpExec = require('./_regexp-exec-abstract');\r\n\r\n// @@search logic\r\nrequire('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search, maybeCallNative) {\r\n  return [\r\n    // `String.prototype.search` method\r\n    // https://tc39.github.io/ecma262/#sec-string.prototype.search\r\n    function search(regexp) {\r\n      var O = defined(this);\r\n      var fn = regexp == undefined ? undefined : regexp[SEARCH];\r\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\r\n    },\r\n    // `RegExp.prototype[@@search]` method\r\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search\r\n    function (regexp) {\r\n      var res = maybeCallNative($search, regexp, this);\r\n      if (res.done) return res.value;\r\n      var rx = anObject(regexp);\r\n      var S = String(this);\r\n      var previousLastIndex = rx.lastIndex;\r\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\r\n      var result = regExpExec(rx, S);\r\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\r\n      return result === null ? -1 : result.index;\r\n    }\r\n  ];\r\n});\r\n"]},"metadata":{},"sourceType":"script"}
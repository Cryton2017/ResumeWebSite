{"ast":null,"code":"'use strict';\n\nvar classof = require('./_classof');\n\nvar builtinExec = RegExp.prototype.exec; // `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\n\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n\n    if (typeof result !== 'object') {\n      throw new TypeError('RegExp exec method returned something other than an Object or null');\n    }\n\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw new TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return builtinExec.call(R, S);\n};","map":{"version":3,"sources":["C:/Users/chris/Documents/GitHub/ResumeWebSite/Newsite/resume/node_modules/babel-polyfill/node_modules/core-js/modules/_regexp-exec-abstract.js"],"names":["classof","require","builtinExec","RegExp","prototype","exec","module","exports","R","S","result","call","TypeError"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,YAAD,CAArB;;AACA,IAAIC,WAAW,GAAGC,MAAM,CAACC,SAAP,CAAiBC,IAAnC,C,CAEC;AACD;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC/B,MAAIJ,IAAI,GAAGG,CAAC,CAACH,IAAb;;AACA,MAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC9B,QAAIK,MAAM,GAAGL,IAAI,CAACM,IAAL,CAAUH,CAAV,EAAaC,CAAb,CAAb;;AACA,QAAI,OAAOC,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,YAAM,IAAIE,SAAJ,CAAc,oEAAd,CAAN;AACD;;AACD,WAAOF,MAAP;AACD;;AACD,MAAIV,OAAO,CAACQ,CAAD,CAAP,KAAe,QAAnB,EAA6B;AAC3B,UAAM,IAAII,SAAJ,CAAc,6CAAd,CAAN;AACD;;AACD,SAAOV,WAAW,CAACS,IAAZ,CAAiBH,CAAjB,EAAoBC,CAApB,CAAP;AACD,CAbD","sourcesContent":["'use strict';\r\n\r\nvar classof = require('./_classof');\r\nvar builtinExec = RegExp.prototype.exec;\r\n\r\n // `RegExpExec` abstract operation\r\n// https://tc39.github.io/ecma262/#sec-regexpexec\r\nmodule.exports = function (R, S) {\r\n  var exec = R.exec;\r\n  if (typeof exec === 'function') {\r\n    var result = exec.call(R, S);\r\n    if (typeof result !== 'object') {\r\n      throw new TypeError('RegExp exec method returned something other than an Object or null');\r\n    }\r\n    return result;\r\n  }\r\n  if (classof(R) !== 'RegExp') {\r\n    throw new TypeError('RegExp#exec called on incompatible receiver');\r\n  }\r\n  return builtinExec.call(R, S);\r\n};\r\n"]},"metadata":{},"sourceType":"script"}